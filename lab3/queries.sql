-- Задание №1

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД > 1.
-- b) Н_ВЕДОМОСТИ.ДАТА < 2010-06-18.
-- c) Н_ВЕДОМОСТИ.ДАТА > 1998-01-05.
-- Вид соединения: INNER JOIN.

select Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА
from Н_ВЕДОМОСТИ
         inner join Н_ТИПЫ_ВЕДОМОСТЕЙ on Н_ВЕДОМОСТИ.ТВ_ИД = Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД
where Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД > 1
  and Н_ВЕДОМОСТИ.ДАТА < '2010-06-18'
  and Н_ВЕДОМОСТИ.ДАТА > '1998-01-05';


-- Задание №2
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ОТЧЕСТВО < Владимирович.
-- b) Н_ОБУЧЕНИЯ.НЗК < 001000.
-- Вид соединения: INNER JOIN.

select Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА
from Н_УЧЕНИКИ
         inner join Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
         inner join Н_ОБУЧЕНИЯ on Н_ОБУЧЕНИЯ.ВИД_ОБУЧ_ИД = Н_УЧЕНИКИ.ВИД_ОБУЧ_ИД
where Н_ЛЮДИ.ОТЧЕСТВО < 'Владимирович'
  and cast(Н_ОБУЧЕНИЯ.НЗК as int) < 001000;


-- Задание 3
-- Вывести число фамилий и имен без учета повторений.
-- При составлении запроса нельзя использовать DISTINCT.
select count(distinct Н_ЛЮДИ.ИМЯ) as name_count, count(distinct Н_ЛЮДИ.ФАМИЛИЯ) as surname_count
from Н_УЧЕНИКИ
         join Н_ЛЮДИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД;

-- Задание 4
-- Выдать различные имена студентов и число людей с каждой из этих имен, ограничив список именами,
-- встречающимися ровно 10 раз на на заочной форме обучения.
-- Для реализации использовать соединение таблиц.
select distinct Н_ЛЮДИ.ИМЯ, count(*) as count
from Н_ЛЮДИ
         inner join Н_УЧЕНИКИ on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
         inner join Н_ПЛАНЫ on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
         inner join Н_ФОРМЫ_ОБУЧЕНИЯ on Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
where Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = 3
group by Н_ЛЮДИ.ИМЯ
having count(*) = 10;


-- Задание 5
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка меньше средней оценк(е|и) в группе 3100.
SELECT Н_ЛЮДИ.ИД as ЧЛВК_ИД,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ИМЯ,
       Н_ЛЮДИ.ОТЧЕСТВО,
       УЧ.ГРУППА,
       AVG(case when В.ОЦЕНКА >= '1' and В.ОЦЕНКА <= '5' then cast(В.ОЦЕНКА as int) end)
FROM Н_ЛЮДИ
         JOIN Н_УЧЕНИКИ УЧ ON УЧ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
         JOIN Н_ВЕДОМОСТИ В ON УЧ.ЧЛВК_ИД = В.ЧЛВК_ИД
WHERE УЧ.ГРУППА = '4100'
GROUP BY Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, УЧ.ГРУППА
HAVING AVG(case when В.ОЦЕНКА >= '1' and В.ОЦЕНКА <= '5' then cast(В.ОЦЕНКА as int) end) <
       (SELECT AVG(case when ОЦЕНКА >= '1' and ОЦЕНКА <= '5' then cast(ОЦЕНКА as int) end)
        FROM Н_УЧЕНИКИ У3100
                 JOIN Н_ВЕДОМОСТИ В3100 ON У3100.ЧЛВК_ИД = В3100.ЧЛВК_ИД
        WHERE У3100.ГРУППА = '3100');


-- Задание 6
-- Получить список студентов, зачисленных до первого сентября 2012 года на первый курс заочной формы обучения
-- (специальность: Программная инженерия). В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

SELECT УЧ.ГРУППА, УЧ.ЧЛВК_ИД, Л.ФАМИЛИЯ, Л.ИМЯ, Л.ОТЧЕСТВО, П.НОМЕР, Ф.НАИМЕНОВАНИЕ
FROM Н_УЧЕНИКИ УЧ
         JOIN Н_ПЛАНЫ П ON УЧ.ПЛАН_ИД = П.ИД
         JOIN Н_ЛЮДИ Л ON УЧ.ЧЛВК_ИД = Л.ИД
         JOIN Н_ФОРМЫ_ОБУЧЕНИЯ Ф ON П.ФО_ИД = Ф.ИД
         JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ НС ON П.НАПС_ИД = НС.ИД
         JOIN Н_НАПР_СПЕЦ НСП ON НС.НС_ИД = НСП.ИД
WHERE EXISTS (SELECT *
              FROM Н_ФОРМЫ_ОБУЧЕНИЯ Ф_SUB
              WHERE Ф_SUB.НАИМЕНОВАНИЕ = 'Заочная'
                AND НСП.НАИМЕНОВАНИЕ = 'Программная инженерия'
                AND УЧ.НАЧАЛО < '01.09.2012'
                AND Ф_SUB.ИД = Ф.ИД);

-- Задание 7
-- Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ
-- (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ).
-- В запросе нельзя использовать DISTINCT.
select ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, Н_ОТДЕЛЫ.ИД
from Н_ЛЮДИ
         join Н_УЧЕНИКИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
         join Н_ПЛАНЫ on Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
         join Н_ОТДЕЛЫ on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
where Н_ОТДЕЛЫ.ИМЯ_В_ИМИН_ПАДЕЖЕ like 'факультет компьютерных технологий и управления';

SELECT Л.ФАМИЛИЯ, Л.ИМЯ, Л.ОТЧЕСТВО
FROM Н_ЛЮДИ Л
WHERE NOT EXISTS (SELECT 1
                  FROM Н_УЧЕНИКИ У
                           JOIN Н_ПЛАНЫ П ON У.ПЛАН_ИД = П.ИД
                           JOIN Н_ОТДЕЛЫ О ON П.ОТД_ИД = О.ИД
                  WHERE У.ЧЛВК_ИД = Л.ИД
                    AND О.ИМЯ_В_ИМИН_ПАДЕЖЕ LIKE 'факультет компьютерных технологий и управления');

SELECT count(*), О.ИД
FROM Н_ЛЮДИ Л
         LEFT JOIN Н_УЧЕНИКИ У ON Л.ИД = У.ЧЛВК_ИД
         LEFT JOIN Н_ПЛАНЫ П ON У.ПЛАН_ИД = П.ИД
         LEFT JOIN Н_ОТДЕЛЫ О ON П.ОТД_ИД = О.ИД
WHERE О.ИМЯ_В_ИМИН_ПАДЕЖЕ NOT LIKE 'факультет компьютерных технологий и управления'
   OR О.ИД IS NULL
group by О.ИД;
